overlay: 1.0.0
info:
  title: Fix https://openapi.vercel.sh/ from lint and testing
  version: 0.0.2
# The fixes below from the errors found with speakeasy openapi lint and testing the usage of the SDK and endpoints
actions:
  # Update info
  - target: $.info
    update:
      description: The [`@vercel/sdk`](https://www.npmjs.com/package/@vercel/sdk) is a type-safe Typescript SDK that allows you to access the resources and methods of the Vercel REST API. Learn how to [install it](https://vercel.com/docs/rest-api/sdk#installing-vercel-sdk) and [authenticate](https://vercel.com/docs/rest-api/sdk#authentication) with a Vercel access token.
      title: Vercel SDK
  # Removing these paths as they return errors at the source (by calling the endpoint directly)
  - target: $["paths"]["/data-cache/purge-all"]
    remove: true
  - target: $["paths"]["/data-cache/billing-settings"]
    remove: true
  - target: $["paths"]["/certs"]
    remove: true
  - target: $.paths['/v1/projects/{projectId}/pause']
    remove: true
  - target: $.paths['/v1/projects/{projectId}/unpause']
    remove: true
  # Removing these paths as they are deprecated but kept for legacy
  - target: $["paths"]["/v2/secrets/{name}"]
    remove: true
  - target: $["paths"]["/v2/secrets/{idOrName}"]
    remove: true
  - target: $["paths"]["/v3/secrets"]
    remove: true
  - target: $["paths"]["/v3/secrets/{idOrName}"]
    remove: true
  # End of remove paths
  # Marking endpoints to show up in Example Usage section of readme
  - target: $["paths"]["/v6/deployments"].get
    update:
      x-speakeasy-usage-example:
        title: List deployments
        description: List deployments under the authenticated user or team.
        position: 1
  - target: $["paths"]["/v9/projects/{idOrName}"].patch
    update:
      x-speakeasy-usage-example:
        title: Update an existing project
        description: Update the fields of a project using either its name or id.
        position: 2
  # Fixing lint and TS issues from source
  - target: $["paths"]["/v13/deployments"]["post"]["parameters"][0]
    remove: true
  - target: $["paths"]["/v13/deployments"]["post"]["parameters"][2]
    remove: true
  - target: $["paths"]["/v1/domains/{domain}/registry"]["get"]["parameters"]
    update:
      - name: domain
        in: path
        required: true
        schema:
          type: string
          example: example.com
  - target: $["paths"]["/v1/security/firewall/config/{configVersion}"]["get"]["parameters"]
    update:
      - description: The deployed configVersion for the firewall configuration
        in: path
        name: configVersion
        required: true
        schema:
          type: string
  - target: $["paths"]["/v2/teams/{teamId}/members"]["get"]["parameters"]
    update:
      - description: The Team identifier to perform the request on behalf of.
        required: true
        in: path
        name: teamId
        schema:
          type: string
  - target: $["paths"]["/v1/teams/{teamId}/members"]["post"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v1/teams/{teamId}/request"]["post"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v1/teams/{teamId}/request/{userId}"]["get"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v1/teams/{teamId}/request/{userId}"]["get"]["parameters"][?(@.name == 'userId')]
    update:
      name: userId
      required: true
      in: path
      schema:
        type: string
        description: The unique user identifier
  - target: $["paths"]["/v1/teams/{teamId}/members/teams/join"]["post"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v1/teams/{teamId}/members/{uid}"]["delete"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v1/teams/{teamId}/members/{uid}"]["patch"]["parameters"]
    update:
      - name: teamId
        in: path
        required: true
        schema:
          type: string
          description: The unique team identifier
  - target: $["paths"]["/v2/teams/{teamId}"]["get"]["parameters"][0]
    remove: true
  - target: $["paths"]["/v2/teams/{teamId}"]["get"]["parameters"][?(@.name == 'teamId')]["required"]
    update: true
  - target: $["paths"]["/v1/teams/{teamId}/invites/{inviteId}"]["delete"]["parameters"]
    update:
      - name: teamId
        description: The Team identifier to perform the request on behalf of.
        in: path
        required: true
        schema:
          type: string
          description: The Team identifier to perform the request on behalf of.
          example: team_LLHUOMOoDlqOp8wPE4kFo9pE
  - target: $.paths['/v1/data-cache/projects/{projectId}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v1/data-cache/projects/{projectId}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v1/data-cache/projects/{projectId}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v1/data-cache/projects/{projectId}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[0].items
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects'].get.responses['200'].content['application/json'].schema.properties['projects'].items.properties['env'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects'].get.responses['200'].content['application/json'].schema.properties['projects'].items.properties['env'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects'].post.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v10/projects'].post.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}'].get.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}'].get.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['envs'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['envs'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['envs'].items.properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['envs'].items.properties['target'].oneOf[0].items
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['envs'].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['envs'].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[0].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[0].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[1].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[1].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['failed'].items.properties['error'].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['failed'].items.properties['error'].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[0].items.properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[0].items.properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[2].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].delete.responses['200'].content['application/json'].schema.oneOf[2].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].patch.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].patch.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v9/projects/{idOrName}/domains'].get.parameters[0].schema.oneOf[*]
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/domains'].get.parameters[0].schema.oneOf
    update:
      - type: string
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[1].properties['target'].oneOf[0].items
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['target'].oneOf[1].enum
    remove: true
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['target'].oneOf[1]
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[0].properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[0].properties['target'].oneOf[0].items
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['failed'].items.properties['error'].properties['value'].oneOf[1].items.enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['failed'].items.properties['error'].properties['value'].oneOf[1].items
    update:
      enum:
        - production
        - preview
        - development
  - target: $.paths['/v1/projects/{idOrName}/env/{id}'].get.responses['200'].content['application/json'].schema.oneOf[2].properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].patch.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v10/projects'].post.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}'].patch.responses['200'].content['application/json'].schema.properties['env'].items.properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v9/projects/{idOrName}/env'].get.responses['200'].content['application/json'].schema.oneOf[0].properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v10/projects/{idOrName}/env'].post.responses['201'].content['application/json'].schema.properties['created'].oneOf[1].items.properties['target'].oneOf[0].items.enum
    remove: true
  - target: $.paths['/v1/teams/{teamId}/members'].post.requestBody.content['application/json'].schema.properties['role'].default
    remove: true
  - target: $.paths['/v1/teams/{teamId}/members'].post.requestBody.content['application/json'].schema.properties['role']
    update:
      default: MEMBER
  - target: $.paths['/v1/teams/{teamId}/members/{uid}'].patch.requestBody.content['application/json'].schema.properties['role'].default
    remove: true
  - target: $.paths['/v1/teams/{teamId}/members/{uid}'].patch.requestBody.content['application/json'].schema.properties['role']
    update:
      default: MEMBER
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['name']
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['priority'].anyOf[1]
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['priority']
    update:
      nullable: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['weight'].anyOf[1]
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['weight']
    update:
      nullable: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['port'].anyOf[1]
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[6].properties['srv'].properties['port']
    update:
      nullable: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[7].properties['name']
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[9].properties['name']
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[9].properties['https']['properties']['priority'].anyOf[1]
    remove: true
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody.content['application/json'].schema.anyOf[9].properties['https']['properties']['priority']
    update:
      nullable: true
  - target: $.paths['/v1/domains/records/{recordId}'].patch.requestBody.content['application/json'].schema.properties['additionalProperties']
    remove: true
  - target: $.paths['/v3/domains/{domain}'].patch.parameters[0]
    update:
      required: true
  - target: $.paths['/v1/edge-config'].post.requestBody.content['application/json'].schema.properties['items']['propertyNames']
    remove: true
  - target: $.paths['/v1/edge-config'].post.requestBody.content['application/json'].schema.properties['items']['additionalProperties']['oneOf'][0].oneOf[3].type
  - target: $.paths['/v1/edge-config'].post.requestBody.content['application/json'].schema.properties['items']['additionalProperties']['oneOf'][0].oneOf[3].type
    remove: true
  - target: $.paths['/v1/edge-config'].post.requestBody.content['application/json'].schema.properties['items']['additionalProperties']['oneOf'][1].items['oneOf'][3].type
    remove: true
  - target: $.paths['/v1/edge-config'].post.requestBody.content['application/json'].schema.properties['items']['additionalProperties']['oneOf'][1].items
    update:
      nullable: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['value'].oneOf[0].oneOf[3].type
    remove: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['value']
    update:
      nullable: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['value'].oneOf[1].items['oneOf'][3].type
    remove: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['value'].oneOf[1].items
    update:
      nullable: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['description'].oneOf[1].type
    remove: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].properties['description']
    update:
      nullable: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].anyOf[0].properties['operation']['const']
    remove: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].anyOf[0].properties['operation']
    update:
      type: string
      enum: [create]
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].anyOf[3].properties['operation']['const']
    remove: true
  - target: $.paths['/v1/edge-config/{edgeConfigId}/items'].patch.requestBody.content['application/json'].schema.properties['items']['items']['oneOf'][0].anyOf[3].properties['operation']
    update:
      type: string
      enum: [delete]
  - target: $.paths['/v1/integrations/search-repo'].get.parameters[1].schema.type
    remove: true
  - target: $.paths['/v1/integrations/search-repo'].get.parameters[1].schema
    update:
      oneOf:
        - type: string
        - type: number
  - target: $.paths['/v1/log-drains'].post.requestBody.content['application/json'].schema.properties['samplingRate']['multiplesOf']
    remove: true
  - target: $.paths['/v1/log-drains'].post.requestBody.content['application/json'].schema.properties['samplingRate']
    update:
      multipleOf: 0.01
  - target: $.paths['/v1/projects/{idOrName}/protection-bypass'].patch.requestBody.content['application/json'].schema.properties['generate'].properties['secret']['errorMessage']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['rateLimit'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['rateLimit']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['redirect'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties['rules']['items']['properties']['action'].properties['mitigate'].properties['redirect']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[0].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[0].properties['action']
    update:
      type: string
      enum: [firewallEnabled]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[0].properties['id'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[0].properties['id']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['action']
    update:
      type: string
      enum: [rules.insert]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['id'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['id']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['redirect'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties['value'].properties['action'].properties['mitigate'].properties['redirect']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['action']
    update:
      type: string
      enum: [rules.update]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[0].properties['action']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['rateLimit']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['redirect'].anyOf[1].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties['value'].properties['action'].properties['mitigate'].properties['redirect']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[3].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[3].properties['action']
    update:
      type: string
      enum: [rules.remove]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[3].properties['value'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[3].properties['value']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[4].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[4].properties['action']
    update:
      type: string
      enum: [rules.priority]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[5].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[5].properties['action']
    update:
      type: string
      enum: [crs.update]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['action']
    update:
      type: string
      enum: [crs.disable]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['id'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['id']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['value'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[6].properties['value']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[7].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[7].properties['action']
    update:
      type: string
      enum: [ip.insert]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[7].properties['id'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[7].properties['id']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[8].properties['action'].const
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[8].properties['action']
    update:
      type: string
      enum: [ip.update]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[9].properties['action'].const
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[9].properties['action']
    update:
      type: string
      enum: [ip.remove]
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[9].properties['value'].type
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[9].properties['value']
    update:
      nullable: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[10].properties['action']['const']
    remove: true
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[10].properties['action']
    update:
      type: string
      enum: [managedRules.update]
  # Update CRS object descriptions for /v1/security/firewall/config put responses 200
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs
    update:
      description: Custom Ruleset
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.sd
    update:
      description: Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.ma
    update:
      description: Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.      
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.lfi
    update:
      description: Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.   
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.rfi
    update:
      description: Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.    
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.rce
    update:
      description: Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.          
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.php
    update:
      description: PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.gen
    update:
      description: Generic Attack - Provide broad protection from various undefined or novel attack vectors.    
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.xss
    update:
      description: XSS Attack - Prevent injection of malicious scripts into trusted webpages.  
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.sqli
    update:
      description: SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases. 
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.sf
    update:
      description: Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.    
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.active.properties.crs.properties.java
    update:
      description: Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.    
  # Update CRS object descriptions for /v1/security/firewall/config put requestBody    
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs
    update:
      description: Custom Ruleset
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.sd
    update:
      description: Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.ma
    update:
      description: Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.      
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.lfi
    update:
      description: Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.   
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.rfi
    update:
      description: Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.    
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.rce
    update:
      description: Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.          
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.php
    update:
      description: PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.gen
    update:
      description: Generic Attack - Provide broad protection from various undefined or novel attack vectors.    
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.xss
    update:
      description: XSS Attack - Prevent injection of malicious scripts into trusted webpages.  
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.sqli
    update:
      description: SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases. 
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.sf
    update:
      description: Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.    
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.crs.properties.java
    update:
      description: Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.  
  # Update CRS object descriptions for /v1/security/firewall/config/{configVersion} get responses 200    
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs
    update:
      description: Custom Ruleset
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.sd
    update:
      description: Scanner Detection - Detect and prevent reconnaissance activities from network scanning tools.
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.ma
    update:
      description: Multipart Attack - Block attempts to bypass security controls using multipart/form-data encoding.      
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.lfi
    update:
      description: Local File Inclusion Attack - Prevent unauthorized access to local files through web applications.   
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.rfi
    update:
      description: Remote File Inclusion Attack - Prohibit unauthorized upload or execution of remote files.    
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.rce
    update:
      description: Remote Execution Attack - Prevent unauthorized execution of remote scripts or commands.          
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.php
    update:
      description: PHP Attack - Safeguard against vulnerability exploits in PHP-based applications.
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.gen
    update:
      description: Generic Attack - Provide broad protection from various undefined or novel attack vectors.    
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.xss
    update:
      description: XSS Attack - Prevent injection of malicious scripts into trusted webpages.  
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.sqli
    update:
      description: SQL Injection Attack - Prohibit unauthorized use of SQL commands to manipulate databases. 
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.sf
    update:
      description: Session Fixation Attack - Prevent unauthorized takeover of user sessions by enforcing unique session IDs.          
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.crs.properties.java
    update:
      description: Java Attack - Mitigate risks of exploitation targeting Java-based applications or components.     
  # Link to parameter reference in parameter type descriptions for /v1/security/firewall
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.type
    update:
      description: "[Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic."  
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.type
    update:
      description: "[Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic."  
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.type
    update:
      description: "[Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic." 
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties.value.properties.conditionGroup.items.properties.conditions.items.properties.type
    update:
      description: "[Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic."  
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties.value.properties.conditionGroup.items.properties.conditions.items.properties.type
    update:
      description: "[Parameter](https://vercel.com/docs/security/vercel-waf/rule-configuration#parameters) from the incoming traffic."    
  # Link to operator reference in operator descriptions for /v1/security/firewall
  - target: $.paths['/v1/security/firewall/config/{configVersion}'].get.responses.200.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.op
    update:
      description: "[Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value"       
  - target: $.paths['/v1/security/firewall/config'].put.responses.200.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.op
    update:
      description: "[Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value."  
  - target: $.paths['/v1/security/firewall/config'].put.requestBody.content['application/json'].schema.properties.rules.items.properties.conditionGroup.items.properties.conditions.items.properties.op
    update:
      description: "[Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value." 
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[1].properties.value.properties.conditionGroup.items.properties.conditions.items.properties.op
    update:
      description: "[Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value."  
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody.content['application/json'].schema.oneOf[2].properties.value.properties.conditionGroup.items.properties.conditions.items.properties.op
    update:
      description: "[Operator](https://vercel.com/docs/security/vercel-waf/rule-configuration#operators) used to compare the parameter with a value"                                                                       
  - target: $.paths['/v1/teams/{teamId}/members/{uid}'].patch.requestBody.content['application/json'].schema.properties['joinedFrom'].properties['ssoUserId'].type
    remove: true
  - target: $.paths['/v1/teams/{teamId}/members/{uid}'].patch.requestBody.content['application/json'].schema.properties['joinedFrom'].properties['ssoUserId']
    update:
      nullable: true
  - target: $.paths['/v4/aliases'].get.parameters[?(@.name == 'domain')]['schema'].items
    remove: true
  - target: $.paths['/v4/aliases'].get.parameters[?(@.name == 'domain')]['schema'].oneOf[0]
    update:
      items:
        type: string
  # The fixes below are from test performed with using the SDK - https://www.notion.so/vercel/Vercel-SDK-Edits-104e06b059c48085ad11f9288118b604
  - target: $.paths['/v4/aliases'].get.responses['200'].content['application/json'].schema.properties['aliases'].items.properties.deletedAt
    update:
      nullable: true
  - target: $.paths['/v4/aliases/{idOrAlias}'].get.responses['200'].content['application/json'].schema.type
    remove: true
  - target: $.paths['/v4/aliases/{idOrAlias}'].get.responses['200'].content['application/json'].schema.items
    remove: true
  - target: $.paths['/v4/aliases/{idOrAlias}'].get.responses['200'].content['application/json'].schema
    update:
      properties:
        alias:
          type: string
          description: The alias name, it could be a `.vercel.app` subdomain or a custom domain
          example: my-alias.vercel.app
        created:
          type: string
          format: date-time
          description: The date when the alias was created
          example: '2017-04-26T23:00:34.232Z'
        createdAt:
          type: number
          description: The date when the alias was created in milliseconds since the UNIX epoch
          example: 1540095775941
          nullable: true
        creator:
          properties:
            uid:
              type: string
              description: ID of the user who created the alias
              example: 96SnxkFiMyVKsK3pnoHfx3Hz
            email:
              type: string
              description: Email of the user who created the alias
              example: john-doe@gmail.com
            username:
              type: string
              description: Username of the user who created the alias
              example: john-doe
          required:
            - uid
            - email
            - username
          type: object
          description: Information of the user who created the alias
        deletedAt:
          type: number
          description: The date when the alias was deleted in milliseconds since the UNIX epoch
          example: 1540095775941
          nullable: true
        deployment:
          properties:
            id:
              type: string
              description: The deployment unique identifier
              example: dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
            url:
              type: string
              description: The deployment unique URL
              example: my-instant-deployment-3ij3cxz9qr.now.sh
            meta:
              type: string
              description: The deployment metadata
              example: {}
          required:
            - id
            - url
          type: object
          description: A map with the deployment ID, URL and metadata
        deploymentId:
          nullable: true
          type: string
          description: The deployment ID
          example: dpl_5m8CQaRBm3FnWRW1od3wKTpaECPx
        projectId:
          nullable: true
          type: string
          description: The unique identifier of the project
          example: prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB
        redirect:
          nullable: true
          type: string
          description: Target destination domain for redirect when the alias is a redirect
        redirectStatusCode:
          nullable: true
          type: number
          enum:
            - 301
            - 302
            - 307
            - 308
          description: Status code to be used on redirect
        uid:
          type: string
          description: The unique identifier of the alias
        updatedAt:
          type: number
          description: The date when the alias was updated in milliseconds since the UNIX epoch
          example: 1540095775941
          nullable: true
        protectionBypass:
          additionalProperties:
            oneOf:
              - properties:
                  createdAt:
                    type: number
                  createdBy:
                    type: string
                  scope:
                    type: string
                    enum:
                      - shareable-link
                required:
                  - createdAt
                  - createdBy
                  - scope
                type: object
                description: The protection bypass for the alias
              - properties:
                  createdAt:
                    type: number
                  lastUpdatedAt:
                    type: number
                  lastUpdatedBy:
                    type: string
                  access:
                    type: string
                    enum:
                      - requested
                      - granted
                  scope:
                    type: string
                    enum:
                      - user
                required:
                  - createdAt
                  - lastUpdatedAt
                  - lastUpdatedBy
                  - access
                  - scope
                type: object
                description: The protection bypass for the alias
              - properties:
                  createdAt:
                    type: number
                  createdBy:
                    type: string
                  scope:
                    type: string
                    enum:
                      - alias-protection-override
                required:
                  - createdAt
                  - createdBy
                  - scope
                type: object
                description: The protection bypass for the alias
              - properties:
                  createdAt:
                    type: number
                  lastUpdatedAt:
                    type: number
                  lastUpdatedBy:
                    type: string
                  scope:
                    type: string
                    enum:
                      - email_invite
                required:
                  - createdAt
                  - lastUpdatedAt
                  - lastUpdatedBy
                  - scope
                type: object
                description: The protection bypass for the alias
          type: object
          description: The protection bypass for the alias
      required:
        - alias
        - created
        - deploymentId
        - projectId
        - uid
      type: object
  - target: $.paths['/v1/log-drains'].get.responses['200'].content['application/json'].schema.items.properties['createdFrom']['enum']
    update:
      - integration
  - target: $.paths['/v1/log-drains'].get.responses['200'].content['application/json'].schema.items.required
    remove: true
  - target: $.paths['/v1/log-drains'].get.responses['200'].content['application/json'].schema.items
    update:
      required:
        - id
        - deliveryFormat
        - url
        - name
        - ownerId
        - createdAt
        - deletedAt
        - updatedAt
        - environments
  - target: components.schemas['Team']
    update:
      additionalProperties: true
  - target: $.paths['/v1/edge-config'].get.responses['200'].content['application/json'].schema.properties
    remove: true
  - target: $.paths['/v1/edge-config'].get.responses['200'].content['application/json'].schema.required
    remove: true
  - target: $.paths['/v1/edge-config'].get.responses['200'].content['application/json'].schema.type
    update: array
  - target: $.paths['/v1/edge-config'].get.responses['200'].content['application/json'].schema
    update:
      items:
        properties:
          id:
            type: string
          createdAt:
            type: number
          ownerId:
            type: string
          slug:
            type: string
            description: Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
          updatedAt:
            type: number
          digest:
            type: string
          transfer:
            properties:
              fromAccountId:
                type: string
              startedAt:
                type: number
              doneAt:
                nullable: true
                type: number
            required:
              - fromAccountId
              - startedAt
              - doneAt
            type: object
            description: Keeps track of the current state of the Edge Config while it gets transferred.
          schema:
            type: object
          purpose:
            properties:
              type:
                type: string
                enum:
                  - flags
              projectId:
                type: string
            required:
              - type
              - projectId
            type: object
          sizeInBytes:
            type: number
          itemCount:
            type: number
        required:
          - sizeInBytes
          - itemCount
  - target: $["paths"]["/v1/webhooks"]["post"]["responses"]["200"]["content"]["application/json"]["schema"]["properties"]["events"]["items"]
    update:
      x-speakeasy-enums:
        - budget.reached,
        - budget.reset,
        - domain.created,
        - deployment.created,
        - deployment.error,
        - deployment.canceled,
        - deployment.succeeded,
        - deployment.ready,
        - deployment.check-rerequested,
        - deployment.promoted,
        - deployment.integration.action.start,
        - deployment.integration.action.cancel,
        - deployment.integration.action.cleanup,
        - edge-config.created,
        - edge-config.deleted,
        - edge-config.items.updated,
        - firewall.attack,
        - integration-configuration.permission-upgraded,
        - integration-configuration.removed,
        - integration-configuration.scope-change-confirmed,
        - project.created,
        - project.removed,
        - deployment-checks-completed-legacy,
        - deployment-ready-legacy,
        - deployment-prepared-legacy,
        - deployment-error-legacy,
        - deployment-check-rerequested-legacy,
        - deployment-canceled-legacy,
        - project-created-legacy,
        - project-removed-legacy,
        - domain-created-legacy,
        - deployment-legacy,
        - integration-configuration-permission-updated-legacy,
        - integration-configuration-removed-legacy,
        - integration-configuration-scope-change-confirmed-legacy,
        - marketplace.invoice.created,
        - marketplace.invoice.paid,
        - marketplace.invoice.notpaid,
        - marketplace.invoice.refunded,
        - test-webhook
  - target: $["paths"]["/v1/webhooks"]["post"]["requestBody"]["content"]["application/json"]["schema"]["properties"]["events"]["items"]
    update:
      x-speakeasy-enums:
        - budget.reached,
        - budget.reset,
        - domain.created,
        - deployment.created,
        - deployment.error,
        - deployment.canceled,
        - deployment.succeeded,
        - deployment.ready,
        - deployment.check-rerequested,
        - deployment.promoted,
        - deployment.integration.action.start,
        - deployment.integration.action.cancel,
        - deployment.integration.action.cleanup,
        - edge-config.created,
        - edge-config.deleted,
        - edge-config.items.updated,
        - firewall.attack,
        - integration-configuration.permission-upgraded,
        - integration-configuration.removed,
        - integration-configuration.scope-change-confirmed,
        - project.created,
        - project.removed,
        - deployment-checks-completed-legacy,
        - deployment-ready-legacy,
        - deployment-prepared-legacy,
        - deployment-error-legacy,
        - deployment-check-rerequested-legacy,
        - deployment-canceled-legacy,
        - project-created-legacy,
        - project-removed-legacy,
        - domain-created-legacy,
        - deployment-legacy,
        - integration-configuration-permission-updated-legacy,
        - integration-configuration-removed-legacy,
        - integration-configuration-scope-change-confirmed-legacy,
        - marketplace.invoice.created,
        - marketplace.invoice.paid,
        - marketplace.invoice.notpaid,
        - marketplace.invoice.refunded,
        - test-webhook
  - target: $["paths"]["/v1/webhooks"]["get"]["responses"]["200"]["content"]["application/json"]["schema"]["oneOf"][0]["items"]["properties"]["events"]["items"]
    update:
      x-speakeasy-enums:
        - budget.reached,
        - budget.reset,
        - domain.created,
        - deployment.created,
        - deployment.error,
        - deployment.canceled,
        - deployment.succeeded,
        - deployment.ready,
        - deployment.check-rerequested,
        - deployment.promoted,
        - deployment.integration.action.start,
        - deployment.integration.action.cancel,
        - deployment.integration.action.cleanup,
        - edge-config.created,
        - edge-config.deleted,
        - edge-config.items.updated,
        - firewall.attack,
        - integration-configuration.permission-upgraded,
        - integration-configuration.removed,
        - integration-configuration.scope-change-confirmed,
        - project.created,
        - project.removed,
        - deployment-checks-completed-legacy,
        - deployment-ready-legacy,
        - deployment-prepared-legacy,
        - deployment-error-legacy,
        - deployment-check-rerequested-legacy,
        - deployment-canceled-legacy,
        - project-created-legacy,
        - project-removed-legacy,
        - domain-created-legacy,
        - deployment-legacy,
        - integration-configuration-permission-updated-legacy,
        - integration-configuration-removed-legacy,
        - integration-configuration-scope-change-confirmed-legacy,
        - marketplace.invoice.created,
        - marketplace.invoice.paid,
        - marketplace.invoice.notpaid,
        - marketplace.invoice.refunded,
        - test-webhook
  - target: $["paths"]["/v1/webhooks"]["get"]["responses"]["200"]["content"]["application/json"]["schema"]["oneOf"][1]["items"]["properties"]["events"]["items"]
    update:
      x-speakeasy-enums:
        - budget.reached,
        - budget.reset,
        - domain.created,
        - deployment.created,
        - deployment.error,
        - deployment.canceled,
        - deployment.succeeded,
        - deployment.ready,
        - deployment.check-rerequested,
        - deployment.promoted,
        - deployment.integration.action.start,
        - deployment.integration.action.cancel,
        - deployment.integration.action.cleanup,
        - edge-config.created,
        - edge-config.deleted,
        - edge-config.items.updated,
        - firewall.attack,
        - integration-configuration.permission-upgraded,
        - integration-configuration.removed,
        - integration-configuration.scope-change-confirmed,
        - project.created,
        - project.removed,
        - deployment-checks-completed-legacy,
        - deployment-ready-legacy,
        - deployment-prepared-legacy,
        - deployment-error-legacy,
        - deployment-check-rerequested-legacy,
        - deployment-canceled-legacy,
        - project-created-legacy,
        - project-removed-legacy,
        - domain-created-legacy,
        - deployment-legacy,
        - integration-configuration-permission-updated-legacy,
        - integration-configuration-removed-legacy,
        - integration-configuration-scope-change-confirmed-legacy,
        - marketplace.invoice.created,
        - marketplace.invoice.paid,
        - marketplace.invoice.notpaid,
        - marketplace.invoice.refunded,
        - test-webhook
  - target: $["paths"]["/v1/webhooks/{id}"]["get"]["responses"]["200"]["content"]["application/json"]["schema"]["properties"]["events"]["items"]
    update:
      x-speakeasy-enums:
        - budget.reached,
        - budget.reset,
        - domain.created,
        - deployment.created,
        - deployment.error,
        - deployment.canceled,
        - deployment.succeeded,
        - deployment.ready,
        - deployment.check-rerequested,
        - deployment.promoted,
        - deployment.integration.action.start,
        - deployment.integration.action.cancel,
        - deployment.integration.action.cleanup,
        - edge-config.created,
        - edge-config.deleted,
        - edge-config.items.updated,
        - firewall.attack,
        - integration-configuration.permission-upgraded,
        - integration-configuration.removed,
        - integration-configuration.scope-change-confirmed,
        - project.created,
        - project.removed,
        - deployment-checks-completed-legacy,
        - deployment-ready-legacy,
        - deployment-prepared-legacy,
        - deployment-error-legacy,
        - deployment-check-rerequested-legacy,
        - deployment-canceled-legacy,
        - project-created-legacy,
        - project-removed-legacy,
        - domain-created-legacy,
        - deployment-legacy,
        - integration-configuration-permission-updated-legacy,
        - integration-configuration-removed-legacy,
        - integration-configuration-scope-change-confirmed-legacy,
        - marketplace.invoice.created,
        - marketplace.invoice.paid,
        - marketplace.invoice.notpaid,
        - marketplace.invoice.refunded,
        - test-webhook
  # Make requestbody required
  - target: $.paths['/v1/access-groups/{idOrName}'].post.requestBody
    update:
      required: true
  - target: $.paths['/v1/access-groups'].post.requestBody
    update:
      required: true    
  - target: $.paths['/v1/access-groups/{accessGroupIdOrName}/projects'].post.requestBody
    update:
      required: true     
  - target: $.paths['/v1/access-groups/{accessGroupIdOrName}/projects/{projectId}'].patch.requestBody
    update:
      required: true      
  - target: $.paths['/v8/artifacts/events'].post.requestBody
    update:
      required: true       
  - target: $.paths['/v8/artifacts/{hash}'].put.requestBody
    update:
      required: true       
  - target: $.paths['/v8/artifacts'].post.requestBody
    update:
      required: true     
  - target: $.paths['/v1/deployments/{deploymentId}/checks'].post.requestBody
    update:
      required: true   
  - target: $.paths['/v1/deployments/{deploymentId}/checks/{checkId}'].patch.requestBody
    update:
      required: true     
  - target: $.paths['/v1/data-cache/projects/{projectId}'].patch.requestBody
    update:
      required: true     
  - target: $.paths['/v13/deployments'].post.requestBody
    update:
      required: true     
  - target: $.paths['/v5/domains/buy'].post.requestBody
    update:
      required: true      
  - target: $.paths['/v2/domains/{domain}/records'].post.requestBody
    update:
      required: true    
  - target: $.paths['/v1/domains/records/{recordId}'].patch.requestBody
    update:
      required: true     
  - target: $.paths['/v5/domains'].post.requestBody
    update:
      required: true     
  - target: $.paths['/v3/domains/{domain}'].patch.requestBody
    update:
      required: true   
  - target: $.paths['/v1/edge-config'].post.requestBody
    update:
      required: true        
  - target: $.paths['/v1/edge-config/{edgeConfigId}'].put.requestBody
    update:
      required: true   
  - target: $.paths['/v1/edge-config/{edgeConfigId}/schema'].post.requestBody
    update:
      required: true 
  - target: $.paths['/v1/edge-config/{edgeConfigId}/tokens'].delete.requestBody
    update:
      required: true  
  - target: $.paths['/v1/edge-config/{edgeConfigId}/token'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v1/installations/{integrationConfigurationId}/events'].post.requestBody
    update:
      required: true      
  - target: $.paths['/v1/installations/{integrationConfigurationId}/billing'].post.requestBody
    update:
      required: true     
  - target: $.paths['/v1/installations/{integrationConfigurationId}/billing/invoices'].post.requestBody
    update:
      required: true      
  - target: $.paths['/v1/installations/{integrationConfigurationId}/billing/invoices/{invoiceId}/actions'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v1/installations/{integrationConfigurationId}/products/{integrationProductIdOrSlug}/resources/{resourceId}/secrets'].put.requestBody
    update:
      required: true   
  - target: $.paths['/v1/integrations/sso/token'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v2/integrations/log-drains'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v1/log-drains'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v1/projects/{idOrName}/members'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v10/projects'].post.requestBody
    update:
      required: true  
  - target: $.paths['/v9/projects/{idOrName}'].patch.requestBody
    update:
      required: true  
  - target: $.paths['/v9/projects/{idOrName}/domains/{domain}'].patch.requestBody
    update:
      required: true  
  - target: $.paths['/v10/projects/{idOrName}/domains'].post.requestBody
    update:
      required: true 
  - target: $.paths['/v10/projects/{idOrName}/env'].post.requestBody
    update:
      required: true 
  - target: $.paths['/v9/projects/{idOrName}/env/{id}'].patch.requestBody
    update:
      required: true 
  - target: $.paths['/v1/projects/{idOrName}/protection-bypass'].patch.requestBody
    update:
      required: true 
  - target: $.paths['/v1/security/attack-mode'].post.requestBody
    update:
      required: true 
  - target: $.paths['/v1/security/firewall/config'].put.requestBody
    update:
      required: true 
  - target: $.paths['/v1/security/firewall/config'].patch.requestBody
    update:
      required: true 
  - target: $.paths['/v1/teams/{teamId}/members'].post.requestBody
    update:
      required: true 
  - target: $.paths['/v1/teams/{teamId}/request'].post.requestBody
    update:
      required: true
  - target: $.paths['/v1/teams/{teamId}/members/teams/join'].post.requestBody
    update:
      required: true
  - target: $.paths['/v1/teams/{teamId}/members/{uid}'].patch.requestBody
    update:
      required: true
  - target: $.paths['/v2/teams/{teamId}'].patch.requestBody
    update:
      required: true
  - target: $.paths['/v1/teams'].post.requestBody
    update:
      required: true
  - target: $.paths['/v1/teams/{teamId}'].delete.requestBody
    update:
      required: true
  - target: $.paths['/v1/user'].delete.requestBody
    update:
      required: true
  - target: $.paths['/v3/user/tokens'].post.requestBody
    update:
      required: true
  - target: $.paths['/v1/webhooks'].post.requestBody
    update:
      required: true
  - target: $.paths['/v2/deployments/{id}/aliases'].post.requestBody
    update:
      required: true
  - target: $.paths['/v7/certs'].post.requestBody
    update:
      required: true
  - target: $.paths['/v7/certs'].put.requestBody
    update:
      required: true
  # Update response schemas for various HTTP status codes across all paths and operations
  - target: $["paths"][*][*]["responses"]["400"]
    update:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VercelBadRequestError"  # Reference to the Bad Request error schema
  - target: $["paths"][*][*]["responses"]["401"]
    update:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VercelForbiddenError"  # Reference to the Forbidden error schema
  - target: $["paths"][*][*]["responses"]["404"]
    update:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VercelNotFoundError"  # Reference to the Not Found error schema
  - target: $["paths"][*][*]["responses"]["429"] 
    update:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/VercelRateLimitError"  # Reference to the Rate Limit error schema
# Define custom error schemas under the components section
  - target: $["components"]["schemas"]
    update:
      VercelBaseError:
        type: object
        required: [code, message]
        properties:
          code:
            type: string
            const: bad_request  # Fixed value for the error code
          message:
            type: string  # Human-readable error message
      VercelForbiddenError:
        type: object
        required: [error]
        properties:
          error:
            allOf:
              - $ref: "#/components/schemas/VercelBaseError"  # Inherits from VercelBaseError
              - type: object
                required: [code]
                properties:
                  code:
                    type: string
                    const: forbidden  # Specific error code for forbidden access
      VercelNotFoundError:
        type: object
        required: [error]
        properties:
          error:
            allOf:
              - $ref: "#/components/schemas/VercelBaseError"  # Inherits from VercelBaseError
              - type: object
                required: [code]
                properties:
                  code:
                    type: string
                    const: not_found  # Specific error code for not found
                  message:
                    type: string
                    const: "The item you requested was not found"                    
      VercelBadRequestError:
        type: object
        required: [error]
        properties:
          error:
            allOf:
              - $ref: "#/components/schemas/VercelBaseError"  # Inherits from VercelBaseError
              - type: object
                required: [code]
                properties:
                  code:
                    type: string
                    const: bad_request  # Specific error code for bad requests
                  message:
                    type: string
                    const: "One of the provided values in the request query, body or headers is invalid"
      VercelRateLimitError:
        type: object
        required: [error]
        properties:
          error:
            allOf:
              - $ref: "#/components/schemas/VercelBaseError"  # Inherits from VercelBaseError
              - type: object
                required: [code]
                properties:
                  code:
                    type: string
                    const: rate_limited  # Specific error code for rate limiting
                  limit:
                    $ref: "#/components/schemas/RateLimitNotice"  # Reference to rate limit details
      RateLimitNotice:
        type: object
        required: [remaining, reset, resetMs, total]
        properties:
          remaining:
            type: integer
            minimum: 0  # Number of remaining allowed requests
          reset:
            type: integer
            minimum: 0  # Timestamp when the rate limit resets
          resetMs:
            type: integer
            minimum: 0  # Reset time in milliseconds
          total:
            type: integer
            minimum: 0  # Total number of allowed requests                                     